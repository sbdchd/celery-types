from multiprocessing.util import Finalize as Finalize, ForkAwareLocal as ForkAwareLocal, ForkAwareThreadLock as ForkAwareThreadLock, get_temp_dir as get_temp_dir, is_exiting as is_exiting, register_after_fork as register_after_fork
from logging import Logger, _Level

__all__ = ['sub_debug', 'debug', 'info', 'sub_warning', 'get_logger', 'log_to_stderr', 'get_temp_dir', 'register_after_fork', 'is_exiting', 'Finalize', 'ForkAwareThreadLock', 'ForkAwareLocal', 'SUBDEBUG', 'SUBWARNING']

SUBDEBUG: int
SUBWARNING: int

def sub_debug(msg: str, *args: object, **kwargs: object) -> None: ...
def debug(msg: str, *args: object, **kwargs: object) -> None: ...
def info(msg: str, *args: object, **kwargs: object) -> None: ...
def sub_warning(msg: str, *args: object, **kwargs: object) -> None: ...
def warning(msg: str, *args: object, **kwargs: object) -> None: ...
def get_logger() -> Logger: ...
def log_to_stderr(level: _Level | None = None) -> Logger: ...
